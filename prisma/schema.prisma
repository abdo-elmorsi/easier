// npx prisma generate to update the modals
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  user_name  String   @unique
  password   String
  role       String   @default("user")
  img        String?
  phone      String?
  created_at DateTime @default(now()) @db.Date
  updated_at DateTime @updatedAt @db.Date

  // Relations
  towers Tower[] // A user can manage multiple towers
}

model Tower {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String   @unique
  address       String
  num_of_floors Int
  created_at    DateTime @default(now()) @db.Date
  updated_at    DateTime @updatedAt @db.Date

  // Relations
  user_id           String              @db.ObjectId
  user              User                @relation(fields: [user_id], references: [id])
  flats             Flat[] // A tower can have multiple flats
  EstimatedExpenses EstimatedExpenses[]
}

model Flat {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  number         String
  floor          Int
  password       String // Authentication field
  phone          String?
  electricity    Boolean  @default(false) // Electricity availability
  water          Boolean  @default(false) // Water availability
  waste          Boolean  @default(false) // Waste availability
  guard          Boolean  @default(false) // Guard availability
  elevator       Boolean  @default(false) // Elevator availability
  others         Boolean  @default(false) // Others availability
  pay_percentage Int      @default(100) // Pay percentage, can be 0, 50, or 100
  created_at     DateTime @default(now()) @db.Date
  updated_at     DateTime @updatedAt @db.Date

  // Relations
  tower_id String @db.ObjectId
  tower    Tower  @relation(fields: [tower_id], references: [id])
}

// this is the estimated expenses for each month in each tower 
model EstimatedExpenses {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  electricity Int      @default(0) // Electricity number
  water       Int      @default(0) // Water number
  waste       Int      @default(0) // Waste number
  guard       Int      @default(0) // Guard number
  elevator    Int      @default(0) // Elevator number
  others      Int      @default(0) // Others number
  notes       String?
  created_at  DateTime @default(now()) @db.Date
  updated_at  DateTime @updatedAt @db.Date

  // Relations
  tower_id String @db.ObjectId
  tower    Tower  @relation(fields: [tower_id], references: [id])
}
